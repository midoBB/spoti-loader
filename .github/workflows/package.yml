name: Package Project and Release

on:
  push:
    branches:
      - master  # Change this to your main branch name

jobs:
  package:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        architecture: ['armv7', 'x64']

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9  # Change this to your Python version

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python -
        export PATH="$HOME/.poetry/bin:$PATH"

    - name: Install dependencies
      run: |
        poetry install
    - name: Export Requirements
      run: |
        poetry export -f requirements.txt --without-hashes --output requirements.txt
    - name: Package Project
      run: |
        poetry build
    - name: Download and Include ffmpeg for Linux arm v7
      run: |
        case "${{ matrix.architecture }}" in
          armv7)
            URL="https://johnvansickle.com/ffmpeg/releases/ffmpeg-release-armhf-static.tar.xz"
            ;;
          x64)
            URL="https://johnvansickle.com/ffmpeg/releases/ffmpeg-release-amd64-static.tar.xz"
            ;;
          *)
            echo "Unsupported architecture: ${{ matrix.architecture }}"
            exit 1
            ;;
        esac
        wget "$URL"
        tar -C ffmpeg -xf *.tar.xz --strip-components=1 --wildcards --no-anchored '*/ffmpeg*'
    - name: Append Requirements to Tarball
      run: |
        tar -xzvf ./dist/spoti_loader-0.1.0.tar.gz
        cp ./requirements.txt ./spoti_loader-0.1.0
        cp ./ffmpeg ./spoti_loader-0.1.0
        mkdir dest
        zip -r ./dest/spoti_loader_${{ matrix.architecture }}.zip ./spoti_loader-0.1.0
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release ${{ github.run_number }}
    - name: Upload Release Asset (ARMv7)
      id: upload-release-asset_armv7
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dest/spoti_loader_armv7.zip
        asset_name: spotiloader_armv7.zip
        asset_content_type: application/zip
    - name: Upload Release Asset (x64)
      id: upload-release-asset_x64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dest/spoti_loader_x64.zip
        asset_name: spotiloader_x64.zip
        asset_content_type: application/zip
